# pyproject.toml â€” Project configuration for cired.digital project
# Maintainer: Minh Ha-Duong <minh.ha-duong@cnrs.fr>
#
# This file defines project metadata, dependencies, and tool configurations.
# It is the single source of truth to implement the dest practices
# described in    docs/CODE_STYLE.md
#
# Python 3.11+, using:
# - Ruff for linting, formatting, and complexity checks
#   See: https://docs.astral.sh/ruff/
# - mypy for type verification
# - Pytest for unit testing   (coming soon)

[project]
name = "cired-chatbot"
version = "0.0.1"
description = "Scripts and data for a chatbot with CIRED publications"
authors = [
  { name="Minh Ha-Duong", email="minh.ha-duong@cnrs.fr" },
]
readme = "README.md"
requires-python = ">=3.11,<3.14"
dependencies = [
  "requests",
  "python-magic>=0.4.27",
  "fastapi",
  "uvicorn[standard]",
  "r2r",
  "pydantic>=2.0,<3.0",
  "pyarrow>=14.0.0",
  "matplotlib",
  "wordcloud",
  "pandas",
]

# Note: Ubuntu distro version of `ruff`, `pytest`, `mypy` tend to be old.
# Rather install the latest version in `.local/bin/` with
#    `pipx install ruff pytest mypy pre-commit`
#
[project.optional-dependencies]
dev = [
  "ruff>=0.11.12,<1.0.0",
  "pytest>=7.0,<9.0",
  "mypy>=1.16,<2.0",
  "pre-commit>=3.0,<5.0",
  "types-requests",
  "pandas-stubs>=2.2.0,!=2.3.0.250702",
  "docker",
  "types-docker",
  "tabulate",
  "types-tabulate",
  "pytest-playwright>=0.4.0,<1.0.0",
  "pytest-xdist>=3.0,<4.0",
]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.format]
line-ending = "lf"  # Satisfy end-of-line-fixer pre-commit hook

[tool.ruff.lint]
select = ["E", "F", "W", "I", "C90", "D", "UP"]
ignore = ["E501", "D203", "D212"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy"]
strict = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
  "r2r.*",
  "matplotlib.*",
  "wordcloud.*",
  "pytest_playwright.*",
  "playwright.*",
  # Add other modules without types here
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_any_generics = false
warn_return_any = false

[tool.pytest.ini_options]
markers = [
  "smoke: tests de bout en bout lents pour la stack R2R",
  "e2e: tests end-to-end avec Playwright",
]
addopts = [
  "--maxfail=5",
  "--strict-markers",
  "--browser-channel=chromium",
]
filterwarnings = [
  # Ignore Pydantic V2 DeprecationWarning about Config class
  "ignore:Support for class-based `config` is deprecated:DeprecationWarning:pydantic._internal._config",
  # Ignorer depreciations about json_encoders
  "ignore:`json_encoders` is deprecated:DeprecationWarning:pydantic._internal._generate_schema",
]
